// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: follows.sql

package sqlcstore

import (
	"context"
)

const createFollow = `-- name: CreateFollow :one
INSERT INTO follows (
  following_user_id, followed_user_id
) VALUES (
  $1, $2
)
RETURNING following_user_id, followed_user_id, created_at
`

type CreateFollowParams struct {
	FollowingUserID int64
	FollowedUserID  int64
}

func (q *Queries) CreateFollow(ctx context.Context, arg CreateFollowParams) (Follow, error) {
	row := q.db.QueryRowContext(ctx, createFollow, arg.FollowingUserID, arg.FollowedUserID)
	var i Follow
	err := row.Scan(&i.FollowingUserID, &i.FollowedUserID, &i.CreatedAt)
	return i, err
}

const deleteFollow = `-- name: DeleteFollow :exec
DELETE FROM follows
WHERE following_user_id = $1 AND followed_user_id = $2
`

type DeleteFollowParams struct {
	FollowingUserID int64
	FollowedUserID  int64
}

func (q *Queries) DeleteFollow(ctx context.Context, arg DeleteFollowParams) error {
	_, err := q.db.ExecContext(ctx, deleteFollow, arg.FollowingUserID, arg.FollowedUserID)
	return err
}
